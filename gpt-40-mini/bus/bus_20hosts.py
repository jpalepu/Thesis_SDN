# Generated by gpt-40-mini

from mininet.net import Mininet
from mininet.node import RemoteController
from mininet.cli import CLI
from mininet.log import setLogLevel

def create_bus_network(host_count=20, switch_count=5):
    """Create a bus topology network with specified hosts and switches."""
    net = Mininet()

    # Define controllers
    controllers = {
        'c1': ('127.0.0.1', 6633),
        'c2': ('127.0.0.1', 6634),
        'c3': ('127.0.0.1', 6635)
    }
    
    for name, (ip, port) in controllers.items():
        net.addController(name, controller=RemoteController, ip=ip, port=port)

    # Add switches
    switches = [net.addSwitch(f's{i}') for i in range(1, switch_count + 1)]

    # Add hosts and connect them to switches
    hosts = []
    for i in range(1, host_count + 1):
        host = net.addHost(f'h{i}')
        hosts.append(host)
        switch_index = (i - 1) // (host_count // switch_count)
        net.addLink(host, switches[switch_index])

    # Connect switches in a linear (bus) topology
    for i in range(len(switches) - 1):
        net.addLink(switches[i], switches[i + 1])

    # Assign controllers to switches
    for i, switch in enumerate(switches):
        if i < 2:
            switch.start([net.get('c1'), net.get('c2')])
        elif i < 4:
            switch.start([net.get('c2'), net.get('c3')])
        else:
            switch.start([net.get('c1'), net.get('c3')])

    net.start()
    CLI(net)
    net.stop()

if __name__ == '__main__':
    setLogLevel('info')
    create_bus_network() 